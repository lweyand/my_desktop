# Activation de la coloration en bash
# Requiert .git.prompt: https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh
function _update_ps1_bash() {
    last_result=$?

    # Coloration Git
    PS1='\[\033]0;${PWD//[^[:ascii:]]/?}\007\]' # set window title
    PS1="$PS1"'\n'                 # new line
    PS1="$PS1"'\[\033[32m\]'       # change to green
    PS1="$PS1"'\u'                 # user
    # Add debian in red if on docker for win.
    if [[ "$(uname -r)" =~ 'Microsoft' ]]; then
      PS1="$PS1"'\[\033[31m\]'     # change to red
      PS1="$PS1"'@debian'          # @debian
    else
      PS1="$PS1"'\[\033[32m\]'     # change to green
      #PS1="$PS1"'@\h'             # @host
    fi
    PS1="$PS1"' '                  # <space>

    if [ ! -z "${VIRTUAL_ENV-}" ] ; then
        PS1="$PS1"'\[\033[35m\]'          # change to purple
        PS1="$PS1"'[${VIRTUAL_ENV##*/}] ' # activated virtual env
    fi

    PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow
    PS1="$PS1"'\w'                 # current working directory

    if test -f ~/.git.prompt
    then
      . ~/.git.prompt
      GIT_PS1_SHOWCOLORHINTS=1
      GIT_PS1_SHOWDIRTYSTATE=1
      GIT_PS1_SHOWUNTRACKEDFILES=1
      GIT_PS1_SHOWUPSTREAM=auto
      PS1="$PS1"'\[\033[36m\]'  # change color to cyan
      PS1="$PS1"'`__git_ps1`'   # bash function
    fi

    partition='/dev/sda1'
    current_usage=$( df -h | grep ${partition} | awk {'print $5'} )
    max_usage=90%
    if [ ${current_usage%?} -ge ${max_usage%?} ]; then
        PS1="$PS1"' \[\033[101m\]'            # change to red bg
        PS1="$PS1"'${partition}>${max_usage}' # warn is current usage > max
    fi

    PS1="$PS1"'\n'                 # new line
    if [ ${last_result} -ne 0 ]; then
        PS1="$PS1"'\[\033[31m\]'            # change to red
        PS1="$PS1"'$ '
        PS1="$PS1"'\[\033[0m\]'        # change color
    else
        PS1="$PS1"'\[\033[0m\]'        # change color
        PS1="$PS1"'$ '
    fi
}

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color|screen) color_prompt=yes;;
esac

if [[ "$color_prompt" = yes && ! $PROMPT_COMMAND =~ _update_ps1_bash ]]; then
    export DBG_PROMPT_COLOR="bashcolors, $PROMPT_COLOR"
    PROMPT_COMMAND="_update_ps1_bash; $PROMPT_COMMAND"
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi

unset color_prompt
